package com.github.longdt.vertxorm.example.repository;

import com.github.longdt.vertxorm.example.model.RuleTemplate;
import com.github.longdt.vertxorm.example.model.RuleTemplateIdAccessor;
import com.github.longdt.vertxorm.example.model.RuleTemplateParametersMapper;
import com.github.longdt.vertxorm.example.model.RuleTemplateRowMapper;
import com.github.longdt.vertxorm.example.model.RuleTemplateTable;
import com.github.longdt.vertxorm.repository.Configuration;
import com.github.longdt.vertxorm.repository.postgresql.AbstractCrudRepository;
import io.vertx.sqlclient.Pool;
import javax.annotation.processing.Generated;

@Generated(
    value = "com.github.longdt.vertxorm.codegen.CodeGenProcessor",
    comments = "Do not edit this file"
)
public class RuleTemplateRepositoryPostgres extends AbstractCrudRepository<Integer, RuleTemplate> implements RuleTemplateRepository {
  public RuleTemplateRepositoryPostgres(Pool pool) {
    var conf = new Configuration<Integer, RuleTemplate>()
    		.setTableName(RuleTemplateTable.TABLE_NAME)
    		.setColumnNames(RuleTemplateTable.COLUMN_NAMES)
    		.setIdAccessor(RuleTemplateIdAccessor.INSTANCE)
    		.setParametersMapper(RuleTemplateParametersMapper.INSTANCE)
    		.setRowMapper(RuleTemplateRowMapper.INSTANCE);
    init(pool, conf);
  }
}
